name: CI

on:
  push:
    branches:
      - main

env:
  REGISTRY: "registry.digitalocean.com/cinema-club-registry"
  IMAGE_NAME: "cinema-club-bot"
  CONTAINER_NAME: "cinema-club"

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .
        
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,,CONTAINER_NAME
          script: |
            # Login into Digital Ocean Registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} $(echo $REGISTRY)
            # Stop running container
            docker stop $(echo $CONTAINER_NAME)
            # Remove old container
            docker rm $(echo $CONTAINER_NAME)
            # Set env variables
            export ADMIN_BOT_API_TOKEN=${{ secrets.ADMIN_BOT_API_TOKEN }}
            export PUBLIC_BOT_API_TOKEN=${{ secrets.PUBLIC_BOT_API_TOKEN }}
            export MONGO_URI=${{ secrets.MONGO_URI }}
            export MONGO_DB_NAME=${{ secrets.MONGO_DB_NAME }}
            export AUTH_SERVER_URL=${{ secrets.AUTH_SERVER_URL }}
            # Run a new container from a new image
            docker run -e ADMIN_BOT_API_TOKEN -e PUBLIC_BOT_API_TOKEN -e MONGO_URI -e MONGO_DB_NAME -e AUTH_SERVER_URL -d \
            --restart always \
            --publish 80:80 \
            --net redisnet \
            --name $(echo $CONTAINER_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)